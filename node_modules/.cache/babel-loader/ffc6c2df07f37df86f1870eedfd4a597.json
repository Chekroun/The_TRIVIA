{"ast":null,"code":"var _jsxFileName = \"/Users/mika/the/src/views/category/Category.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Category = function Category(_ref) {\n  var category = _ref.category,\n      currentQuestionIndex = _ref.currentQuestionIndex,\n      handleSubmit = _ref.handleSubmit,\n      answerInput = _ref.answerInput,\n      score = _ref.score;\n  var theQuestion = category.clues[currentQuestionIndex];\n  return React.createElement(\"section\", {\n    className: 'question-box',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Category page: \", category.title), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Question : \", theQuestion.question), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Votre score : \", score), React.createElement(\"form\", {\n    className: 'question-box',\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: answerInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: 'submit',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Send answer\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    id: 'check_down',\n    className: 'invisible',\n    width: \"100\",\n    height: \"100\",\n    src: \"https://lottiefiles.com/iframe/433-checked-done\",\n    frameborder: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })));\n};\n\nCategory.propTypes = {\n  category: PropTypes.shape({}).isRequired,\n  currentQuestion: PropTypes.number.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  answerInput: PropTypes.shape({\n    value: PropTypes.instanceOf(HTMLInputElement)\n  })\n};\nexport default Category;","map":{"version":3,"sources":["/Users/mika/the/src/views/category/Category.js"],"names":["React","PropTypes","Category","category","currentQuestionIndex","handleSubmit","answerInput","score","theQuestion","clues","title","question","propTypes","shape","isRequired","currentQuestion","number","func","value","instanceOf","HTMLInputElement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAyE;AAAA,MAAtEC,QAAsE,QAAtEA,QAAsE;AAAA,MAA5DC,oBAA4D,QAA5DA,oBAA4D;AAAA,MAAtCC,YAAsC,QAAtCA,YAAsC;AAAA,MAAxBC,WAAwB,QAAxBA,WAAwB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACtF,MAAMC,WAAW,GAAGL,QAAQ,CAACM,KAAT,CAAeL,oBAAf,CAApB;AACA,SACI;AAAS,IAAA,SAAS,EAAE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoBD,QAAQ,CAACO,KAA7B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkBF,WAAW,CAACG,QAA9B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqBJ,KAArB,CAHJ,EAII;AAAM,IAAA,SAAS,EAAE,cAAjB;AAAiC,IAAA,QAAQ,EAAEF,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,GAAG,EAAEC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAJJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,EAAE,EAAE,YAAZ;AAA0B,IAAA,SAAS,EAAE,WAArC;AAAkD,IAAA,KAAK,EAAC,KAAxD;AAA8D,IAAA,MAAM,EAAC,KAArE;AAA2E,IAAA,GAAG,EAAC,iDAA/E;AAAiI,IAAA,WAAW,EAAC,GAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARJ,CADJ;AAeH,CAjBD;;AAmBAJ,QAAQ,CAACU,SAAT,GAAqB;AACjBT,EAAAA,QAAQ,EAAEF,SAAS,CAACY,KAAV,CAAgB,EAAhB,EAAoBC,UADb;AAEjBC,EAAAA,eAAe,EAAEd,SAAS,CAACe,MAAV,CAAiBF,UAFjB;AAGjBT,EAAAA,YAAY,EAAEJ,SAAS,CAACgB,IAAV,CAAeH,UAHZ;AAIjBR,EAAAA,WAAW,EAAEL,SAAS,CAACY,KAAV,CAAgB;AACzBK,IAAAA,KAAK,EAAEjB,SAAS,CAACkB,UAAV,CAAqBC,gBAArB;AADkB,GAAhB;AAJI,CAArB;AASA,eAAelB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Category = ({ category, currentQuestionIndex, handleSubmit, answerInput, score}) => {\n    const theQuestion = category.clues[currentQuestionIndex];\n    return(\n        <section className={'question-box'}>\n            <h1>Category page: {category.title}</h1>\n            <span>Question : {theQuestion.question}</span>\n            <span>Votre score : {score}</span>\n            <form className={'question-box'} onSubmit={handleSubmit}>\n                <input ref={answerInput}></input>\n                <button type={'submit'}>Send answer</button>\n            </form>\n            <div>\n                <iframe id={'check_down'} className={'invisible'} width=\"100\" height=\"100\" src=\"https://lottiefiles.com/iframe/433-checked-done\" frameborder=\"0\" ></iframe>\n            </div>\n        </section>\n    );\n  \n};\n\nCategory.propTypes = {\n    category: PropTypes.shape({}).isRequired,\n    currentQuestion: PropTypes.number.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    answerInput: PropTypes.shape({\n        value: PropTypes.instanceOf(HTMLInputElement)\n}),\n};\n\nexport default Category;"]},"metadata":{},"sourceType":"module"}